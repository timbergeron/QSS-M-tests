name: Linux CI (MinGW)

on: [push, pull_request]

jobs:
  build:
    name: x64
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo gem install apt-spy2
        sudo apt-spy2 check
        mirrors=$(apt-spy2 list | awk '{print $1}')
        for mirror in $mirrors; do
          echo "Trying mirror: $mirror"
          sudo apt-spy2 select --mirror=$mirror --commit
          # Run 'apt-get update' for the selected mirror
          if sudo apt-get update; then
            # Try to install dependencies. If successful, break out of the loop.
            if sudo apt-get install -y mingw-w64 libsdl2-dev libmad0-dev libopus-dev libvorbis-dev zlib1g-dev libvorbisfile3 libopusfile-dev libz-mingw-w64 libz-mingw-w64-dev libcurl4-openssl-dev zip; then
              echo "Dependencies successfully installed using mirror: $mirror"
              break
            else
              echo "Failed to install dependencies from mirror: $mirror. Trying next mirror."
            fi
          else
            echo "Failed to update using mirror: $mirror. Trying next mirror."
          fi
        done
        
        # Check and update SDL2 if the version is outdated
        installed_sdl2_version=$(sdl2-config --version)
        required_sdl2_version="2.26.3" # or whichever version is needed
        if [ "$(printf '%s\n' "$required_sdl2_version" "$installed_sdl2_version" | sort -V | head -n1)" != "$required_sdl2_version" ]; then
          echo "Updating SDL2 to the latest version"
          sudo apt-get remove --purge libsdl2-dev
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev
        fi

    - name: Build
      run: |
        chmod 755 build-linux.sh
        sudo ./build-linux.sh
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: QSS-M
        path: |
          Quake/QSS-M-l64.zip
